{"version":3,"sources":["components/Navigation.js","redux/postDuck.js","components/PostForm.js","redux/commentDuck.js","components/CommentForm.js","components/CommentItem.js","components/CommentList.js","components/CommentModal.js","components/PostDetail.js","components/PostItem.js","components/PostsList.js","containers/Home.js","redux/store.js","index.js"],"names":["Navigation","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ADD_POST_SUCCESS","TOGGLE_MODAL","initialState","fromJS","posts","modal","post","isShow","showModal","payload","mapDispatchToProps","createPost","data","connect","id","uuid","title","message","username","date","useState","setPost","handleInputChange","e","target","name","value","Date","onSubmit","preventDefault","placeholder","onChange","rows","ADD_COMMENT_SUCCESS","List","createComment","idPost","text","comment","setComment","CommentItem","comments","state","commentsStore","map","item","CommentModal","mapDispachToProps","postsStore","get","Modal","show","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","getIn","Body","styles","hoverCard","cursor","border","style","onClick","toString","Home","rootReducers","combineReducers","action","updateIn","list","push","postMap","setIn","isShowMap","App","store","createStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e586da2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = () => {\r\n\treturn(\r\n\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n\t\t\t<a className=\"navbar-brand\" href=\"/\">PostItHERE</a>\r\n\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t</button>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navigation;","import {fromJS} from 'immutable';\r\n\r\n// Type\r\nconst ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nconst TOGGLE_MODAL = 'TOGGLE_MODAL';\r\n\r\n// Constant\r\nconst initialState = fromJS({\r\n\tposts: [],\r\n\tmodal: {\r\n\t\tpost: {},\r\n\t\tisShow: false\r\n\t}\r\n});\r\n\r\n// Action\r\nexport const createPost = (data) => ({\r\n\ttype: ADD_POST_SUCCESS,\r\n\tpayload: data\r\n});\r\n\r\nexport const showModal = (post) => ({\r\n\ttype: TOGGLE_MODAL,\r\n\tpayload: post\r\n});\r\n\r\n// Reducer\r\nexport default function postReducer(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase ADD_POST_SUCCESS:\r\n\t\t\treturn state.updateIn(['posts'], list => list.push(action.payload));\r\n\t\tcase TOGGLE_MODAL:\r\n\t\t\tconst postMap = state.setIn(['modal', 'post'], action.payload);\r\n\t\t\tconst isShowMap = postMap.setIn(['modal', 'isShow'], !postMap.getIn(['modal','isShow']));\r\n\t\t\treturn isShowMap;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {createPost} from '../redux/postDuck';\r\n\r\nconst PostForm = ({createPost}) => {\r\n\tconst initialState = {\r\n\t\tid: uuid(),\r\n\t\ttitle: '',\r\n\t\tmessage: '',\r\n\t\tusername: '',\r\n\t\tdate: ''\r\n\t};\r\n\r\n\tconst [post, setPost] = useState(initialState);\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tcreatePost(post);\r\n\t\tsetPost(initialState);\r\n\t};\r\n\r\n\tconst handleInputChange = e => {\r\n\t\tsetPost({...post, [e.target.name]: e.target.value, date: new Date()});\r\n\t};\r\n\r\n\treturn(\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-md-8 mx-auto\">\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t<h3 className=\"text-title text-center\">New post</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"Post title\" onChange={handleInputChange} value={post.title} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<textarea type=\"text\" name=\"message\" rows=\"3\" className=\"form-control\" placeholder=\"Post message\" onChange={handleInputChange} value={post.message}></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Username\" onChange={handleInputChange} value={post.username} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success btn-block\">Submit</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tcreatePost\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(PostForm);\r\n","import {List} from 'immutable';\r\n\r\n// Type\r\nconst ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\n\r\n// Constant\r\nconst initialState = List();\r\n// Action\r\nexport const createComment = (data) => ({\r\n\ttype: ADD_COMMENT_SUCCESS,\r\n\tpayload: data\r\n});\r\n\r\n// Reducer\r\nexport default function commentReducer(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase ADD_COMMENT_SUCCESS:\r\n\t\t\treturn state.push(action.payload);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createComment} from '../redux/commentDuck';\r\n\r\nconst CommentForm = ({createComment, idPost}) => {\r\n\tconst initialState = {\r\n\t\tid: idPost,\r\n\t\ttext: '',\r\n\t\tusername: ''\r\n\t};\r\n\r\n\tconst [comment, setComment] = useState(initialState);\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tcreateComment(comment);\r\n\t\tsetComment(initialState);\r\n\t};\r\n\r\n\tconst handleInputChange = e => {\r\n\t\tsetComment({...comment, [e.target.name]: e.target.value});\r\n\t};\r\n\r\n\treturn(\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-md-8 mx-auto\">\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t<h3 className=\"text-title text-center\">New comment</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<textarea type=\"text\" name=\"text\" rows=\"2\" className=\"form-control\" placeholder=\"Post message\" onChange={handleInputChange} value={comment.text}></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Username\" onChange={handleInputChange} value={comment.username} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success btn-block\">Submit</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tcreateComment\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CommentForm);","import React, {Fragment} from 'react';\r\n\r\nconst CommentItem = ({comments}) => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t<div className=\"container p-2\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-10 mx-auto\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t\t\t\t<h4>{comments.username}</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<p className=\"lead\">{comments.text}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default CommentItem;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst CommentList = ({comments, idPost}) => (\r\n\tcomments.map(item => (item.id === idPost \r\n\t\t? <CommentItem key={item.id} comments={item} /> : null\r\n\t))\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcomments: state.commentsStore\r\n});\r\n\r\nexport default connect(mapStateToProps)(CommentList);","import React, {Fragment} from 'react';\r\nimport CommentForm from './CommentForm';\r\nimport CommentList from './CommentList';\r\n\r\nconst CommentModal = ({idPost}) => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<CommentForm idPost={idPost} />\r\n\t\t\t<CommentList idPost={idPost} />\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default CommentModal;","import React, {Fragment} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {connect} from 'react-redux';\r\nimport {showModal} from '../redux/postDuck';\r\nimport CommentModal from './CommentModal';\r\n\r\nconst PostDetail = ({modal, showModal}) => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<Modal show={modal.get('isShow')} onHide={() => showModal({})} dialogClassName=\"modal-90w\" aria-labelledby=\"example-custom-modal-styling-title\">\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title id=\"example-custom-modal-styling-title\">\r\n\t\t\t\t\t\t{modal.getIn(['post','title'])}\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<p>{modal.getIn(['post','message'])}</p>\r\n\t\t\t\t\t<p>{modal.getIn(['post','username'])}</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<CommentModal idPost={modal.getIn(['post','id'])} />\r\n\t  \t\t</Modal>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tmodal: state.postsStore.get('modal')\r\n});\r\n\r\nconst mapDispachToProps = {\r\n\tshowModal\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(PostDetail);\r\n","import React, {Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {showModal} from '../redux/postDuck';\r\nimport PostDetail from './PostDetail';\r\n\r\nconst styles = {\r\n\thoverCard: {\r\n\t\tcursor: 'pointer',\r\n\t\tborder: '1px solid black',\r\n\t}\r\n};\r\n\r\nconst PostItem = ({posts, modal, showModal}) => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t<PostDetail />\r\n\t\t<div className=\"container p-2\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-10 mx-auto\">\r\n\t\t\t\t\t<div className=\"card\" style={styles.hoverCard} onClick={() => showModal(posts)}>\r\n\t\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t\t\t\t\t<h1>{posts.title}</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<p className=\"lead\">{posts.username}</p>\r\n\t\t\t\t\t\t\t<p>{posts.message}</p>\r\n\t\t\t\t\t\t\t<p>{posts.date.toString()}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tmodal: state.postsStore.get('modal')\r\n});\r\n\r\nconst mapDispachToProps = {\r\n\tshowModal\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(PostItem);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PostItem from './PostItem';\r\n\r\nconst PostList = ({posts}) => (\r\n\tposts.map(item => (\r\n\t\t<PostItem key={item.id} posts={item} />\r\n\t))\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tposts: state.postsStore.get('posts')\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostList);\r\n","import React, {Fragment} from 'react';\r\nimport PostForm from '../components/PostForm';\r\nimport PostList from '../components/PostsList';\r\n\r\nconst Home = () => {\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<PostForm />\r\n\t\t\t<PostList />\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Home;","import {createStore, combineReducers} from 'redux';\r\nimport postDuck from './postDuck';\r\nimport commentDuck from './commentDuck';\r\n\r\nconst rootReducers = combineReducers({\r\n\tpostsStore: postDuck,\r\n\tcommentsStore: commentDuck\r\n});\r\n\r\nexport default function generateStore(){\r\n\tconst store = createStore(rootReducers);\r\n\treturn store;\r\n}\r\n","import React, {StrictMode, Fragment} from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport \"bootswatch/dist/litera/bootstrap.min.css\";\nimport Navigation from './components/Navigation';\nimport Home from './containers/Home';\nimport generateStore from './redux/store';\n\nconst App = () => {\n\tconst store = generateStore();\n\n\treturn(\n\t\t<Provider store={store}>\n\t\t\t<Fragment>\n\t\t\t\t<Navigation />\n\t\t\t\t<div className=\"container p-4\">\n\t\t\t\t\t<Home />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t</Provider>\n\t);\n};\n\nrender(\n\t<StrictMode>\n\t\t<App />\n\t</StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}